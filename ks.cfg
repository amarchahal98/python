#version=DEVEL
url --url="https://mirror.its.sfu.ca/mirror/CentOS/7/os/x86_64/"

eula --agreed

# Add epel-release for required yum packages
repo --name="epel" --baseurl=http://download.fedoraproject.org/pub/epel/$releasever/$basearch

logging level=debug

# Reboot system after Kickstart has ended
reboot

# Disable CentOS's FirstBoot screen
firstboot --disable

keyboard --vckeymap=us --xlayouts='us'

lang en_CA.UTF-8

timezone America/Vancouver --isUtc

# Set up authentication options (Alias of authconfig)
auth --passalgo=sha512 --useshadow

# Set the system's root password from cryptic output
rootpw --iscrypted PEO6a6IsNWw/U

# Specify graphical installation (Default)
graphical

# Create user admin with password set, and added to the group "wheel".
user --name=admin --password=PEO6a6IsNWw/U --iscrypted --gecos="admin" --groups="wheel"

# Set network specifications, DHCP IP from DHCP/(PXE)? Server. "Activate" is the same as "onboot"
network  --bootproto=dhcp --device=eth0 --gateway=192.168.254.1 --ip=192.168.254.5 --nameserver=8.8.8.8 --netmask=255.255.255.0 --ipv6=auto --activate
network  --hostname=wordpress

# Set installer to ignore some disks, useful for autopartitioning
ignoredisk --only-use=sda
clearpart --drives=sda --all 
autopart --type=btrfs

# How boot loader should get installed.
bootloader --append="rhgb crashkernel=auto" --location=mbr #--driveorder=/dev/sda

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

# Firewall rules, 443 for HTTPS
firewall --enabled --http --ssh --port=443
selinux --permissive

# Enable services to remain active on reboot
services --enabled=sshd,ntpd,chronyd,nginx,xinetd,dhcpd,mariadb,php-fpm

# Install Yum Packages
%packages --nobase --excludedocs
@core
python
@base 
# epel-release
vim
chrony
git
kernel-devel
kernel-headers
dkms
gcc
gcc-c++
kexec-tools
ntp
dhcp
syslinux-tftpboot
tftp-server
xinetd
nginx
mariadb-server
mariadb
php
php-mysql
php-fpm
kernel-devel
kernel-headers
dkms
gcc
gcc-c++
kexec-tools
wget
rsync

%end

%post --nochroot --log=/mnt/sysimage/root/ks-post-nochroot.log 


# Create ssh folder in the admin user's home directory.
mkdir /mnt/sysimage/home/admin/.ssh



%end

%post --log=/root/ks-post.log
#!/bin/bash
#Update System
yum -y update

chmod -R u=rw,g=,o= /home/admin/.ssh
chown -R admin /home/admin/.ssh
chgrp -R admin /home/admin/.ssh #Alternatively chown -R admin:admin /home/admin/.ssh
chmod u=rwx,g=,o= /home/admin/.ssh

# Add wheel group to sudo without password prompt
sed -i 's/^#\s*\(%wheel\s*ALL=(ALL)\s*NOPASSWD:\s*ALL\)/\1/' /etc/sudoers
sed -i 's/^\(Defaults    requiretty\)/#\1/' /etc/sudoers

# Pull files from PXE Server
curl -O 192.168.254.5/mariadb_security_config.sql
curl -O 192.168.254.5/php.ini
curl -O 192.168.254.5/nginx.conf
curl -O 192.168.254.5/www.conf
curl -O 192.168.254.5/wp-config.php
curl -O 192.168.254.5/wp_mariadb_config.service 
curl -O 192.168.254.5/wp_mariadb_config.sh

# Download and extract Wordpress
curl -L http://wordpress.org/latest.tar.gz | tar xzv

# Copy config files to its required location
/usr/bin/cp nginx.conf /etc/nginx/nginx.conf
/usr/bin/cp php.ini /etc/php.ini
/usr/bin/cp www.conf /etc/php-fpm.d/www.conf
/usr/bin/cp wp-config.php wordpress/
/usr/bin/cp wp_mariadb_config.service /usr/lib/systemd/system/
/usr/bin/cp wp_mariadb_config.sh /root/
/usr/bin/cp mariadb_security_config.sql /root/

# Add wordpress files to web server's root directory
rsync -avP wordpress/ /usr/share/nginx/html/
mkdir /usr/share/nginx/html/wp-content/uploads
chown -R admin:nginx /usr/share/nginx/html/*

# Create a symlink of our created service file containing the script. Enables the unit to run on reboot
ln -s /usr/lib/systemd/system/wp_mariadb_config.service /etc/systemd/system/multi-user.target.wants/wp_mariadb_config.service

# Install Guest Additions
mkdir vbox_cd
mount /dev/sr1 ./vbox_cd
./vbox_cd/VBoxLinuxAdditions.run
umount ./vbox_cd
rmdir ./vbox_cd

 
%end
